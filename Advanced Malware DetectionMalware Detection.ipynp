{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOQQGNkxnK54pTH5XXtfg/6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hhlRM2tE3H8q","executionInfo":{"status":"ok","timestamp":1665992188022,"user_tz":-420,"elapsed":56475,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"25d905b0-8040-4be9-e596-0872f0405881"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["**Yêu cầu 1: Cho biết kết quả accuracy và confusion matrix**"],"metadata":{"id":"Dyghrosy3Yf_"}},{"cell_type":"code","source":["import os\n","from sklearn.feature_extraction.text import HashingVectorizer,TfidfTransformer\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","from sklearn.pipeline import Pipeline"],"metadata":{"id":"2jps3ScJ3TQG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["js_path = \"/content/drive/MyDrive/MLATTL/Dataset_Lab3/JavascriptSamples\"\n","obfuscated_js_path = \"/content/drive/MyDrive/MLATTL/Dataset_Lab3/JavascriptSamplesObfuscated\"\n","corpus = []\n","labels = []\n","file_types_and_labels = [(js_path, 0), (obfuscated_js_path, 1)]"],"metadata":{"id":"S21VSpLS3Ui2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for files_path, label in file_types_and_labels:\n","    files = os.listdir(files_path)\n","    for file in files:\n","        file_path = files_path + \"/\" + file\n","        try:\n","            with open(file_path, \"r\") as myfile:\n","                data = myfile.read().replace(\"\\n\", \"\")\n","                data = str(data)\n","                corpus.append(data)\n","                labels.append(label)\n","        except:\n","            pass"],"metadata":{"id":"1Cm6yRxM3bbe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(\n","    corpus, labels, test_size=0.33, random_state=42\n",")\n","text_clf = Pipeline(\n","    [\n","        (\"vect\", HashingVectorizer(input=\"content\", ngram_range=(1,3))),\n","        (\"tfidf\", TfidfTransformer(use_idf=True,)),\n","        (\"rf\", RandomForestClassifier(class_weight=\"balanced\")),\n","    ]\n",")"],"metadata":{"id":"8xX-KyMH8E5m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["text_clf.fit(X_train, y_train)\n","y_test_pred = text_clf.predict(X_test)\n","print(accuracy_score(y_test, y_test_pred))\n","print(confusion_matrix(y_test, y_test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"54sCQcwB3hUW","executionInfo":{"status":"ok","timestamp":1665993922344,"user_tz":-420,"elapsed":28240,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"6d7b21c4-b4c6-4611-e1ed-6ccde855e5bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9542190305206463\n","[[604  31]\n"," [ 20 459]]\n"]}]},{"cell_type":"markdown","source":["**Yêu cầu 2. Cho biết kết quả vector X.**"],"metadata":{"id":"jEucSp4u-eAu"}},{"cell_type":"code","source":["from IPython.utils import io"],"metadata":{"id":"_XKHaXDD-mvm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!wget http://didierstevens.com/files/software/pdfid_v0_1_2.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yJpMNsxbGAJ5","executionInfo":{"status":"ok","timestamp":1665996453039,"user_tz":-420,"elapsed":1285,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"c6f011f3-7911-4aac-b2a9-f9cb12d88c93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2022-10-17 08:45:57--  http://didierstevens.com/files/software/pdfid_v0_1_2.zip\n","Resolving didierstevens.com (didierstevens.com)... 96.126.103.196\n","Connecting to didierstevens.com (didierstevens.com)|96.126.103.196|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 6297 (6.1K) [application/zip]\n","Saving to: ‘pdfid_v0_1_2.zip’\n","\n","pdfid_v0_1_2.zip    100%[===================>]   6.15K  --.-KB/s    in 0s      \n","\n","2022-10-17 08:45:58 (565 MB/s) - ‘pdfid_v0_1_2.zip’ saved [6297/6297]\n","\n"]}]},{"cell_type":"code","source":["!unzip pdfid_v0_1_2.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7wYnelVZHo7o","executionInfo":{"status":"ok","timestamp":1665996476618,"user_tz":-420,"elapsed":455,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"da800342-e73e-493d-c64d-2a9eb9c32581"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  pdfid_v0_1_2.zip\n","  inflating: pdfid.py                \n"]}]},{"cell_type":"code","source":["!chmod +x pdfid.py"],"metadata":{"id":"yiiTcqeMHvLW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def PDF_to_FV(file_path):\n","    \"\"\"Featurize a PDF file using pdfid.\"\"\"\n","    with io.capture_output() as captured:\n","        %run -i pdfid $file_path\n","    out = captured.stdout\n","    out1 = out.split(\"\\n\")[2:-2]\n","    return [int(x.split()[-1]) for x in out1]"],"metadata":{"id":"vynnN9Fh-voX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from os import listdir\n","PDFs_path = \"/content/drive/MyDrive/MLATTL/Dataset_Lab3/PDFSamples/\""],"metadata":{"id":"GL_MKfqk-45H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = []\n","files = listdir(PDFs_path)\n","for file in files:\n","    file_path = PDFs_path + file\n","    X.append(PDF_to_FV(file_path))\n","print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mkLElQmV-7g-","executionInfo":{"status":"ok","timestamp":1665998411375,"user_tz":-420,"elapsed":19107,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"d67ae0c8-4958-4e7e-8a4e-899a3632d7b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[153, 153, 82, 82, 2, 2, 2, 7, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0], [1096, 1095, 1061, 1061, 0, 0, 2, 32, 0, 43, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]]\n"]}]},{"cell_type":"markdown","source":["**Yêu cầu thêm: Xây dựng một mô hình DL cơ bản dự đoán bệnh trong tập dataset Pima-indians-diabetes**\n","\n","Input = 8\n","Hidden layer: \n","\n","\n","1.   h1: 20 => relu\n","2.   h2: 16          activation function\n","3.   h3: 6\n","\n","Output layer: 1\n","\n","\n","*   Metric: accuracy\n","*   Train: optimirize adain\n","\n","1.   lr = 0.01\n","2.   epochs = 100\n","3.   batchsize = 20\n"],"metadata":{"id":"l0UuzzRYABY2"}},{"cell_type":"code","source":["from numpy import loadtxt\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","import tensorflow as tf\n","# load the dataset\n","dataset = loadtxt('/content/drive/MyDrive/MLATTL/Dataset_Lab3/pima-indians-diabetes.csv', delimiter=',')\n","# split into input (X) and output (y) variables\n","X = dataset[:,0:8]\n","y = dataset[:,8]\n","# define the keras model\n","model = Sequential()\n","model.add(Dense(12, input_shape=(8,), activation='relu'))\n","model.add(Dense(8, activation='relu'))\n","model.add(Dense(1, activation='sigmoid'))\n","# compile the keras model\n","opt = tf.keras.optimizers.Adam(learning_rate=0.01)\n","model.compile(loss='binary_crossentropy', optimizer = opt, metrics=['accuracy'])\n","# fit the keras model on the dataset\n","model.fit(X, y, epochs=20, batch_size=20, verbose=0)\n","# make class predictions with the model\n","predictions = (model.predict(X) > 0.5).astype(int)\n","# summarize the first 5 cases\n","for i in range(5):\n","    print('%s => %d (expected %d)' % (X[i].tolist(), predictions[i], y[i]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hbqo1zk9EUs9","executionInfo":{"status":"ok","timestamp":1665999231890,"user_tz":-420,"elapsed":2095,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"2322eec3-a100-4630-c4bb-c8e73610d587"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["24/24 [==============================] - 0s 992us/step\n","[6.0, 148.0, 72.0, 35.0, 0.0, 33.6, 0.627, 50.0] => 0 (expected 1)\n","[1.0, 85.0, 66.0, 29.0, 0.0, 26.6, 0.351, 31.0] => 0 (expected 0)\n","[8.0, 183.0, 64.0, 0.0, 0.0, 23.3, 0.672, 32.0] => 1 (expected 1)\n","[1.0, 89.0, 66.0, 23.0, 94.0, 28.1, 0.167, 21.0] => 0 (expected 0)\n","[0.0, 137.0, 40.0, 35.0, 168.0, 43.1, 2.288, 33.0] => 1 (expected 1)\n"]}]},{"cell_type":"code","source":["# evaluate the keras model\n","_, accuracy = model.evaluate(X, y)\n","print('Accuracy: %.2f' % (accuracy*100))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0YrQ_rw4LHpd","executionInfo":{"status":"ok","timestamp":1665999239749,"user_tz":-420,"elapsed":6,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"6c8aeda9-ae47-4dbc-d665-6020835c80b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["24/24 [==============================] - 0s 1ms/step - loss: 0.5267 - accuracy: 0.7513\n","Accuracy: 75.13\n"]}]},{"cell_type":"markdown","source":["**Yêu cầu 4**: Cho biết kết quả đánh giá"],"metadata":{"id":"0djmh67MH5xx"}},{"cell_type":"code","source":["import numpy as np\n","import os\n","import json\n","directories_with_labels = [(\"DA Logs Benign\", 0), (\"DA Logs Malware\",1)]"],"metadata":{"id":"xt2jIscKIBXh","executionInfo":{"status":"ok","timestamp":1667103752185,"user_tz":-420,"elapsed":2,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["def get_API_class_method_type_from_log(log):\n","    \"\"\"Parses out API calls from behavioral logs.\"\"\"\n","    API_data_sequence = []\n","    with open(log) as log_file:\n","        json_log = json.load(log_file)\n","        api_calls_array = \"[\" + json_log[\"api_calls\"] + \"]\""],"metadata":{"id":"UKlpRBFbIEAx","executionInfo":{"status":"ok","timestamp":1667103764550,"user_tz":-420,"elapsed":404,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["        api_calls = json.loads(api_calls_array)\n","        for api_call in api_calls:\n","            data = api_call[\"class\"] + \":\" + api_call[\"method\"] + \":\" + api_call[\"type\"]\n","            API_data_sequence.append(data)\n","    return API_data_sequence"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"rXXUdQFLIMj4","executionInfo":{"status":"error","timestamp":1667103806329,"user_tz":-420,"elapsed":350,"user":{"displayName":"Nhung Ta Thuy","userId":"08473242893739809157"}},"outputId":"83069e0e-291b-4e9e-f15e-80ae986082d8"},"execution_count":3,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-033d6edc1fa8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mapi_calls\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloads\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mapi_calls_array\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mapi_call\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mapi_calls\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mapi_call\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"class\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\":\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mapi_call\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"method\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\":\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mapi_call\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"type\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mAPI_data_sequence\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mAPI_data_sequence\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'api_calls_array' is not defined"]}]}]}